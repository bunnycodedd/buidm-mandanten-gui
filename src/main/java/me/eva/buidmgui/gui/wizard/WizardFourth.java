package me.eva.buidmgui.gui.wizard;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class WizardFourth extends JPanel {
    private JPanel root;
    private JTextPane einNeuerMandantMitTextPane;
    private JLabel nameValueLabel;
    private JLabel idValueLabel;
    private JLabel addressValueLabel;
    private JLabel internalPhoneValueLabel;
    private JLabel externalValueLabel;
    private JLabel faxValueLabel;
    private JLabel orgNameValueLabel;
    private JLabel orgIdValueLabel;
    private EntityCreationContext context;

    public WizardFourth(LayoutManager layout, EntityCreationContext context) {
        super(layout);
        this.context = context;
        add(root);

        nameValueLabel.setText(context.getEntityName());
        idValueLabel.setText(context.getEntityId());
        addressValueLabel.setText(context.getAddress());
        internalPhoneValueLabel.setText(context.getTelInternal());
        externalValueLabel.setText(context.getTelExternal());
        faxValueLabel.setText(context.getFax());

        orgNameValueLabel.setText(context.getEntityName());
        orgIdValueLabel.setText(context.getEntityId());
    }

    public JLabel getNameValueLabel() {
        return nameValueLabel;
    }

    public JLabel getIdValueLabel() {
        return idValueLabel;
    }

    public JLabel getAddressValueLabel() {
        return addressValueLabel;
    }

    public JLabel getInternalPhoneValueLabel() {
        return internalPhoneValueLabel;
    }

    public JLabel getExternalValueLabel() {
        return externalValueLabel;
    }

    public JLabel getFaxValueLabel() {
        return faxValueLabel;
    }

    public JLabel getOrgNameValueLabel() {
        return orgNameValueLabel;
    }

    public JLabel getOrgIdValueLabel() {
        return orgIdValueLabel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridLayoutManager(11, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setEnabled(true);
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 16, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Name: ");
        root.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, 16), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        root.add(panel1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        einNeuerMandantMitTextPane = new JTextPane();
        einNeuerMandantMitTextPane.setText("Ein neuer Mandant mit folgenden Eigenschaften wird erstellt:");
        panel1.add(einNeuerMandantMitTextPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final Spacer spacer1 = new Spacer();
        root.add(spacer1, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        nameValueLabel = new JLabel();
        nameValueLabel.setEnabled(true);
        Font nameValueLabelFont = this.$$$getFont$$$(null, -1, 16, nameValueLabel.getFont());
        if (nameValueLabelFont != null) nameValueLabel.setFont(nameValueLabelFont);
        nameValueLabel.setText("nameValue");
        root.add(nameValueLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setEnabled(true);
        Font label2Font = this.$$$getFont$$$(null, Font.BOLD, 16, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("ID:");
        root.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        idValueLabel = new JLabel();
        idValueLabel.setEnabled(true);
        Font idValueLabelFont = this.$$$getFont$$$(null, -1, 16, idValueLabel.getFont());
        if (idValueLabelFont != null) idValueLabel.setFont(idValueLabelFont);
        idValueLabel.setText("idValue");
        root.add(idValueLabel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setEnabled(true);
        Font label3Font = this.$$$getFont$$$(null, Font.BOLD, 16, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setText("Adresse: ");
        root.add(label3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        root.add(spacer2, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        addressValueLabel = new JLabel();
        addressValueLabel.setEnabled(true);
        Font addressValueLabelFont = this.$$$getFont$$$(null, -1, 16, addressValueLabel.getFont());
        if (addressValueLabelFont != null) addressValueLabel.setFont(addressValueLabelFont);
        addressValueLabel.setText("addressValue");
        root.add(addressValueLabel, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setEnabled(true);
        Font label4Font = this.$$$getFont$$$(null, Font.BOLD, 16, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setText("Tel. intern:");
        root.add(label4, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        internalPhoneValueLabel = new JLabel();
        internalPhoneValueLabel.setEnabled(true);
        Font internalPhoneValueLabelFont = this.$$$getFont$$$(null, -1, 16, internalPhoneValueLabel.getFont());
        if (internalPhoneValueLabelFont != null) internalPhoneValueLabel.setFont(internalPhoneValueLabelFont);
        internalPhoneValueLabel.setText("internalPhoneValue");
        root.add(internalPhoneValueLabel, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setEnabled(true);
        Font label5Font = this.$$$getFont$$$(null, Font.BOLD, 16, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setText("Tel. extern:");
        root.add(label5, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        externalValueLabel = new JLabel();
        externalValueLabel.setEnabled(true);
        Font externalValueLabelFont = this.$$$getFont$$$(null, -1, 16, externalValueLabel.getFont());
        if (externalValueLabelFont != null) externalValueLabel.setFont(externalValueLabelFont);
        externalValueLabel.setText("externalPhoneValue");
        root.add(externalValueLabel, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setEnabled(true);
        Font label6Font = this.$$$getFont$$$(null, Font.BOLD, 16, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setText("Fax");
        root.add(label6, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        faxValueLabel = new JLabel();
        faxValueLabel.setEnabled(true);
        Font faxValueLabelFont = this.$$$getFont$$$(null, -1, 16, faxValueLabel.getFont());
        if (faxValueLabelFont != null) faxValueLabel.setFont(faxValueLabelFont);
        faxValueLabel.setText("faxValue");
        root.add(faxValueLabel, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        root.add(spacer3, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label7 = new JLabel();
        label7.setEnabled(true);
        Font label7Font = this.$$$getFont$$$(null, Font.BOLD, 16, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setText("Organisation:");
        root.add(label7, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        orgNameValueLabel = new JLabel();
        orgNameValueLabel.setEnabled(true);
        Font orgNameValueLabelFont = this.$$$getFont$$$(null, -1, 16, orgNameValueLabel.getFont());
        if (orgNameValueLabelFont != null) orgNameValueLabel.setFont(orgNameValueLabelFont);
        orgNameValueLabel.setText("orgNameValue");
        root.add(orgNameValueLabel, new GridConstraints(9, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label8 = new JLabel();
        label8.setEnabled(true);
        Font label8Font = this.$$$getFont$$$(null, Font.BOLD, 16, label8.getFont());
        if (label8Font != null) label8.setFont(label8Font);
        label8.setText("OrgId:");
        root.add(label8, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        orgIdValueLabel = new JLabel();
        orgIdValueLabel.setEnabled(true);
        Font orgIdValueLabelFont = this.$$$getFont$$$(null, -1, 16, orgIdValueLabel.getFont());
        if (orgIdValueLabelFont != null) orgIdValueLabel.setFont(orgIdValueLabelFont);
        orgIdValueLabel.setText("orgIdValue");
        root.add(orgIdValueLabel, new GridConstraints(10, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
